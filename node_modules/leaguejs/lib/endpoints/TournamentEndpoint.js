const Bluebird = require('bluebird');

const Endpoint = require('../Endpoint');

const util = require('../util');

/***
 * Endpoint to receive client information about champions on the league platform
 * For game data about champions use static-data instead
 */
class TournamentEndpoint extends Endpoint {

	constructor(config, rateLimiter) {
		super('Tournament', config, rateLimiter);
		this.apiUrl += `/platform/${this.apiVersion}/tournament`;
    }

    /**
	 * Register Provider and returns its ID
	 * @methodOf {SummonerEndpoint}
	 * @param {string} region
	 * @param {string} url
	 * @return {Bluebird<TournamentDto>}
	 */
	gettingByName(region, url = this.config.PLATFORM_ID) {
		return Bluebird.resolve()
			.then(() => Bluebird.all([ErrorUtil.throwIfIsArray(region, 'region'), ErrorUtil.throwIfNameIsInvalid(region, 'region')]))
			.then(() => {
				let normalizedName = SummonerUtil.normalizeSummonerName(name);
				return this.executingRequest(`/by-name/${encodeURIComponent(normalizedName)}`, platformIdOrRegion);
			});
	}
    


}

module.exports = ThirdPartyCodeEndpoint;